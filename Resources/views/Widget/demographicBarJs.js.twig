var types = $.map($("[id^=widget]")
    .children(".widget.bar"),
    function(val, i) {
        return $(val)
            .attr("id");
    });

$.each(types, function(index, val) {
    var width = $('#' + val)
        .width();
    var height = width;
    var svg = d3.select('#' + val)
        .append("div")
        .classed("svg-container", true)
        .append("svg")
        // .attr("width", width)
        // .attr("height", height)
        .attr("preserveAspectRatio", "xMinYMin meet")
        .attr("viewBox", "0 0 " + width + " " + height)
         //class to make it responsive
        .classed("svg-content-responsive", true)
        ;
    var data = window[val];

    var max_value = 0;
    for (var d in data) {
        max_value = Math.max(data[d].value, max_value);
    }

    var scale = 0.75;
    var offset = -5;
    var font = 16;
    var dx = width / data.length;
    var dy = height / max_value * scale;

    // bars
    var bars = svg.selectAll(".bar")
        .data(data)
        .enter()
        .append("rect")
        .attr("class", function(d, i) {
            return "bar " + d.label;
        })
        .attr("y", function(d, i) {
            return (height) - (dy * d.value);
        })
        .attr("x", function(d, i) {
            return dx * i;
        })
        .attr("height", function(d, i) {
            return dy * d.value;
        })
        .attr("width", dx)
        .style("fill", function(d, i) {
            var prime = Math.floor(i/data.length*100+150).toString(16);
            var alt = Math.floor(1*i/data.length*200+50).toString(16);
            var other = Math.floor(2*i/data.length*75+50).toString(16)
            if (i%3 == 1) {
                return "#"+prime+alt+other;
            } else if (i%3 == 2) {
                return "#"+alt+prime+other;
            } else {
                return "#"+alt+other+prime;
            }
        })
        .style("stroke", "gray");

    // labels
    var text = svg.selectAll("text")
        .data(data)
        .enter()
        .append("text")
        .text(function(d) {
            return d.label + " (" + d.value + ")";
        })
        .attr("transform", function(d, i) {
            return "rotate(-90 " + ((dx * i) + (dx / 2) + (font / 2)) + " " + (dy * (max_value / scale - d.value) + offset) + ")";
        })
        .attr("class", function(d, i) {
            return "bar-label " + d.label;
        })
        .attr("y", function(d, i) {
            return (dy * (max_value / scale - d.value)) + offset;
        })
        .attr("x", function(d, i) {
            return ((dx * i) + (dx / 2) + (font / 2));
        })
        .attr("font-size", (font) + "px");
});